#PRIME NUMBER OR NOT:
num=int(input())
for i in range(2,num):
    if i%2==0:
        print("Given number is a prime")
    else:
        print("Given number is not a prime")
    break       


#Passing list to a function:
"that function will return the number of even and odd numbers"
def count(lst):
    even=0
    odd=0
    for i in lst:
        if i%2==0:
            even=even+1
        else:
            odd=odd+1
    return even,odd
lst=[22,34,67,54,55,89,63,21,1]


even,odd=count(lst)
print("Even:{} and Odd:{}".format(even,odd))


#FIBONACCI SERIES:
"to print the first 10 fibonacci numbers"
def fib(n):
    a=0
    b=1
    for i in range(2,n):
        c=a+b
        a=b
        b=c
        print(c)


#Factorial of a number:
def fact(n):
    f=1
    for i in range(1,n+1):
        f=f*i
    return f
x=int(input())
result=fact(x)
print(result)


#Factorial using Recursion:
def fact(n):
    if n==0:
        return 1
    else:
        return n*fact(n-1)
result=fact(5)
print(result)


#Lambda Function:
f=lambda a,b:a+b
result=f(4,5)
print(result)


#Lambda function using in filter():
"print even numbers from list"
nums=[3,2,6,8,4,6,2,9]
evens=list(filter(lambda n:n%2==0,nums))
print(evens)

#lambda function using in map():
"print evens numbers from list and double all the values in list and print it"
nums=[3,2,6,8,4,6,2,9]
evens=list(filter(lambda n:n%2==0,nums))
print(evens)
doubles=list(map(lambda n:n*2,evens))
print(doubles)


#lambda function using in reduce():
"print even numbers from list,double all the even numbers and add all the doubled numbers"
from functools import reduce
nums=[3,2,6,8,4,6,2,9]
evens=list(filter(lambda n:n%2==0, nums))
print(evens)
doubles=list(map(lambda n:n*2,evens))
print(doubles)
sum=reduce(lambda a,b:a+b,doubles)
print(sum)




































fib(10)        
